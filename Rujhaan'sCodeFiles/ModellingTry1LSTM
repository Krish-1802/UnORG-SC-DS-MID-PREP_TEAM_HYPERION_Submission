{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11402349,"sourceType":"datasetVersion","datasetId":7141798},{"sourceId":11424360,"sourceType":"datasetVersion","datasetId":7154869}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import OneHotEncoder\nfrom tqdm import tqdm\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:41:23.166816Z","iopub.execute_input":"2025-04-16T13:41:23.167491Z","iopub.status.idle":"2025-04-16T13:41:23.185130Z","shell.execute_reply.started":"2025-04-16T13:41:23.167463Z","shell.execute_reply":"2025-04-16T13:41:23.184445Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/customer-behavior-dataset/Customer_Behavior_Data.csv\n/kaggle/input/ps-dataset/order_data_last_six_month.xlsx - Worksheet.csv\n/kaggle/input/ps-dataset/associated_order_item_data_last_six_month.xlsx - Worksheet.csv\n","output_type":"stream"}],"execution_count":50},{"cell_type":"code","source":"beh_data=pd.read_csv(\"/kaggle/input/customer-behavior-dataset/Customer_Behavior_Data.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:10:13.268695Z","iopub.execute_input":"2025-04-16T13:10:13.269459Z","iopub.status.idle":"2025-04-16T13:10:13.319974Z","shell.execute_reply.started":"2025-04-16T13:10:13.269432Z","shell.execute_reply":"2025-04-16T13:10:13.319214Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"zero_people=beh_data[beh_data['Total Orders']<=4]['customer_id']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:10:47.535912Z","iopub.execute_input":"2025-04-16T13:10:47.536233Z","iopub.status.idle":"2025-04-16T13:10:47.541752Z","shell.execute_reply.started":"2025-04-16T13:10:47.536210Z","shell.execute_reply":"2025-04-16T13:10:47.540973Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"cluster_1_people=beh_data[((beh_data['Total Orders']<=25) & (beh_data['Total Orders']>4) & (beh_data['Average Order Gap Days']>=14))]['customer_id']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:11:22.910361Z","iopub.execute_input":"2025-04-16T13:11:22.910889Z","iopub.status.idle":"2025-04-16T13:11:22.917068Z","shell.execute_reply.started":"2025-04-16T13:11:22.910865Z","shell.execute_reply":"2025-04-16T13:11:22.916226Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"cluster_2_people = beh_data['customer_id'][~beh_data['customer_id'].isin(cluster_1_people) & ~beh_data['customer_id'].isin(zero_people)]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:14:31.975282Z","iopub.execute_input":"2025-04-16T13:14:31.976085Z","iopub.status.idle":"2025-04-16T13:14:31.986097Z","shell.execute_reply.started":"2025-04-16T13:14:31.976055Z","shell.execute_reply":"2025-04-16T13:14:31.985223Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"dataset=pd.read_csv(\"/kaggle/input/ps-dataset/order_data_last_six_month.xlsx - Worksheet.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:36:52.706204Z","iopub.execute_input":"2025-04-16T13:36:52.706470Z","iopub.status.idle":"2025-04-16T13:36:52.924554Z","shell.execute_reply.started":"2025-04-16T13:36:52.706452Z","shell.execute_reply":"2025-04-16T13:36:52.923657Z"}},"outputs":[],"execution_count":33},{"cell_type":"code","source":"train_data=dataset[dataset['customer_id'].isin(cluster_2_people)]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:36:52.925717Z","iopub.execute_input":"2025-04-16T13:36:52.925959Z","iopub.status.idle":"2025-04-16T13:36:52.936411Z","shell.execute_reply.started":"2025-04-16T13:36:52.925941Z","shell.execute_reply":"2025-04-16T13:36:52.935568Z"}},"outputs":[],"execution_count":34},{"cell_type":"code","source":"train_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:36:54.130906Z","iopub.execute_input":"2025-04-16T13:36:54.131216Z","iopub.status.idle":"2025-04-16T13:36:54.145170Z","shell.execute_reply.started":"2025-04-16T13:36:54.131192Z","shell.execute_reply":"2025-04-16T13:36:54.144454Z"}},"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"   order_date  order_id     order_number  customer_id  \\\n0  03/04/2025    136349  SO/25-26/000818         5235   \n1  30/01/2025    110393   SO/24-25/90881         7622   \n3  26/12/2024     96182   SO/24-25/77411         2223   \n4  30/12/2024     97858   SO/24-25/78975         6903   \n5  04/01/2025     99588   SO/24-25/80618         2296   \n\n                    customer_name       poc_name  poc_id    amount  discount  \\\n0  Anshu General Store Sector 34     Vikas Gupta       6  19125.00   1650.00   \n1                  bhai di rasoi   Abhay Srimali    7814   9670.48    735.48   \n3       Bikaner Sweets ( Harola )      Swatantra      25   4520.00    420.00   \n4            Lucknow kirana store      Raj Kumar    7039   1700.00      0.00   \n5            Champaran Meat House     Ajay Singh      38   5074.00    214.00   \n\n   net_order_amount  profit order_status warehouse_name  warehouse_id  \n0           17475.0     0.0       CLOSED          Noida             3  \n1            8935.0   -56.4       CLOSED  Greater NOIDA             6  \n3            4100.0    40.0       CLOSED          Noida             3  \n4            1700.0   -88.0       CLOSED    Gomti Nagar             1  \n5            4860.0    10.0       CLOSED       Telibagh             2  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_date</th>\n      <th>order_id</th>\n      <th>order_number</th>\n      <th>customer_id</th>\n      <th>customer_name</th>\n      <th>poc_name</th>\n      <th>poc_id</th>\n      <th>amount</th>\n      <th>discount</th>\n      <th>net_order_amount</th>\n      <th>profit</th>\n      <th>order_status</th>\n      <th>warehouse_name</th>\n      <th>warehouse_id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>03/04/2025</td>\n      <td>136349</td>\n      <td>SO/25-26/000818</td>\n      <td>5235</td>\n      <td>Anshu General Store Sector 34</td>\n      <td>Vikas Gupta</td>\n      <td>6</td>\n      <td>19125.00</td>\n      <td>1650.00</td>\n      <td>17475.0</td>\n      <td>0.0</td>\n      <td>CLOSED</td>\n      <td>Noida</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>30/01/2025</td>\n      <td>110393</td>\n      <td>SO/24-25/90881</td>\n      <td>7622</td>\n      <td>bhai di rasoi</td>\n      <td>Abhay Srimali</td>\n      <td>7814</td>\n      <td>9670.48</td>\n      <td>735.48</td>\n      <td>8935.0</td>\n      <td>-56.4</td>\n      <td>CLOSED</td>\n      <td>Greater NOIDA</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>26/12/2024</td>\n      <td>96182</td>\n      <td>SO/24-25/77411</td>\n      <td>2223</td>\n      <td>Bikaner Sweets ( Harola )</td>\n      <td>Swatantra</td>\n      <td>25</td>\n      <td>4520.00</td>\n      <td>420.00</td>\n      <td>4100.0</td>\n      <td>40.0</td>\n      <td>CLOSED</td>\n      <td>Noida</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>30/12/2024</td>\n      <td>97858</td>\n      <td>SO/24-25/78975</td>\n      <td>6903</td>\n      <td>Lucknow kirana store</td>\n      <td>Raj Kumar</td>\n      <td>7039</td>\n      <td>1700.00</td>\n      <td>0.00</td>\n      <td>1700.0</td>\n      <td>-88.0</td>\n      <td>CLOSED</td>\n      <td>Gomti Nagar</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>04/01/2025</td>\n      <td>99588</td>\n      <td>SO/24-25/80618</td>\n      <td>2296</td>\n      <td>Champaran Meat House</td>\n      <td>Ajay Singh</td>\n      <td>38</td>\n      <td>5074.00</td>\n      <td>214.00</td>\n      <td>4860.0</td>\n      <td>10.0</td>\n      <td>CLOSED</td>\n      <td>Telibagh</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":36},{"cell_type":"code","source":"train_data.drop(['order_id','order_number','customer_name','poc_name','poc_id','amount','profit','order_status','warehouse_id'],axis=1,inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:36:54.146237Z","iopub.execute_input":"2025-04-16T13:36:54.146456Z","iopub.status.idle":"2025-04-16T13:36:54.164501Z","shell.execute_reply.started":"2025-04-16T13:36:54.146438Z","shell.execute_reply":"2025-04-16T13:36:54.163699Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_31/3538571164.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  train_data.drop(['order_id','order_number','customer_name','poc_name','poc_id','amount','profit','order_status','warehouse_id'],axis=1,inplace=True)\n","output_type":"stream"}],"execution_count":37},{"cell_type":"code","source":"train_data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:36:56.168257Z","iopub.execute_input":"2025-04-16T13:36:56.169010Z","iopub.status.idle":"2025-04-16T13:36:56.180524Z","shell.execute_reply.started":"2025-04-16T13:36:56.168984Z","shell.execute_reply":"2025-04-16T13:36:56.179694Z"}},"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"       order_date  customer_id  discount  net_order_amount warehouse_name\n0      03/04/2025         5235   1650.00           17475.0          Noida\n1      30/01/2025         7622    735.48            8935.0  Greater NOIDA\n3      26/12/2024         2223    420.00            4100.0          Noida\n4      30/12/2024         6903      0.00            1700.0    Gomti Nagar\n5      04/01/2025         2296    214.00            4860.0       Telibagh\n...           ...          ...       ...               ...            ...\n64452  26/12/2024         1625   1250.00           12650.0          Noida\n64454  26/12/2024          948    130.00            1520.0    Gomti Nagar\n64455  26/12/2024         5822    935.00            7320.0       Telibagh\n64457  26/12/2024         4268    198.00            3310.0       Telibagh\n64458  26/12/2024          998    700.00            9990.0    Gomti Nagar\n\n[54935 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_date</th>\n      <th>customer_id</th>\n      <th>discount</th>\n      <th>net_order_amount</th>\n      <th>warehouse_name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>03/04/2025</td>\n      <td>5235</td>\n      <td>1650.00</td>\n      <td>17475.0</td>\n      <td>Noida</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>30/01/2025</td>\n      <td>7622</td>\n      <td>735.48</td>\n      <td>8935.0</td>\n      <td>Greater NOIDA</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>26/12/2024</td>\n      <td>2223</td>\n      <td>420.00</td>\n      <td>4100.0</td>\n      <td>Noida</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>30/12/2024</td>\n      <td>6903</td>\n      <td>0.00</td>\n      <td>1700.0</td>\n      <td>Gomti Nagar</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>04/01/2025</td>\n      <td>2296</td>\n      <td>214.00</td>\n      <td>4860.0</td>\n      <td>Telibagh</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>64452</th>\n      <td>26/12/2024</td>\n      <td>1625</td>\n      <td>1250.00</td>\n      <td>12650.0</td>\n      <td>Noida</td>\n    </tr>\n    <tr>\n      <th>64454</th>\n      <td>26/12/2024</td>\n      <td>948</td>\n      <td>130.00</td>\n      <td>1520.0</td>\n      <td>Gomti Nagar</td>\n    </tr>\n    <tr>\n      <th>64455</th>\n      <td>26/12/2024</td>\n      <td>5822</td>\n      <td>935.00</td>\n      <td>7320.0</td>\n      <td>Telibagh</td>\n    </tr>\n    <tr>\n      <th>64457</th>\n      <td>26/12/2024</td>\n      <td>4268</td>\n      <td>198.00</td>\n      <td>3310.0</td>\n      <td>Telibagh</td>\n    </tr>\n    <tr>\n      <th>64458</th>\n      <td>26/12/2024</td>\n      <td>998</td>\n      <td>700.00</td>\n      <td>9990.0</td>\n      <td>Gomti Nagar</td>\n    </tr>\n  </tbody>\n</table>\n<p>54935 rows × 5 columns</p>\n</div>"},"metadata":{}}],"execution_count":38},{"cell_type":"code","source":"def preprocess_data(df):\n    df = df.copy()\n    df['order_date'] = pd.to_datetime(df['order_date'], dayfirst=True)\n    df['day_of_week'] = df['order_date'].dt.dayofweek\n    return df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:39:10.877712Z","iopub.execute_input":"2025-04-16T13:39:10.878026Z","iopub.status.idle":"2025-04-16T13:39:10.882882Z","shell.execute_reply.started":"2025-04-16T13:39:10.878004Z","shell.execute_reply":"2025-04-16T13:39:10.882046Z"}},"outputs":[],"execution_count":41},{"cell_type":"code","source":"def encode_features(df):\n    # One-hot encode 'day_of_week' and 'warehouse_name'\n    encoder = OneHotEncoder(sparse=False)\n    encoded = encoder.fit_transform(df[['day_of_week', 'warehouse_name']])\n    encoded_df = pd.DataFrame(encoded, columns=encoder.get_feature_names_out(['day_of_week', 'warehouse_name']))\n    df = pd.concat([df.reset_index(drop=True), encoded_df], axis=1)\n    return df, encoder.get_feature_names_out(['day_of_week', 'warehouse_name'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:39:27.092430Z","iopub.execute_input":"2025-04-16T13:39:27.092720Z","iopub.status.idle":"2025-04-16T13:39:27.098199Z","shell.execute_reply.started":"2025-04-16T13:39:27.092700Z","shell.execute_reply":"2025-04-16T13:39:27.097334Z"}},"outputs":[],"execution_count":43},{"cell_type":"code","source":"def build_customer_timeseries(df, feature_columns):\n    full_dates = pd.date_range(df['order_date'].min(), df['order_date'].max(), freq='D')\n    all_data = []\n\n    for cust_id, group in tqdm(df.groupby('customer_id')):\n        cust_df = group.set_index('order_date').sort_index()\n        cust_df = cust_df[['discount', 'net_order_amount'] + feature_columns]\n\n        cust_df = cust_df.reindex(full_dates).fillna(0)\n        cust_df['order_placed'] = (cust_df['net_order_amount'] > 0).astype(int)\n        cust_df['customer_id'] = cust_id\n        cust_df['date'] = cust_df.index\n\n        all_data.append(cust_df.reset_index(drop=True))\n\n    return pd.concat(all_data).reset_index(drop=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:39:28.769035Z","iopub.execute_input":"2025-04-16T13:39:28.769388Z","iopub.status.idle":"2025-04-16T13:39:28.778922Z","shell.execute_reply.started":"2025-04-16T13:39:28.769363Z","shell.execute_reply":"2025-04-16T13:39:28.778108Z"}},"outputs":[],"execution_count":44},{"cell_type":"code","source":"def create_lstm_sequences(daily_df, feature_columns, seq_len=SEQ_LEN, pred_window=PRED_WINDOW):\n    X, y = [], []\n\n    for cust_id, group in tqdm(daily_df.groupby('customer_id')):\n        group = group.sort_values('date').reset_index(drop=True)\n        for i in range(len(group) - seq_len - pred_window):\n            seq = group.iloc[i:i+seq_len][['order_placed', 'discount', 'net_order_amount'] + feature_columns].values\n            target_window = group.iloc[i+seq_len:i+seq_len+pred_window]['order_placed']\n            target = 1 if target_window.sum() > 0 else 0\n            X.append(seq)\n            y.append(target)\n\n    return np.array(X), np.array(y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:39:35.702997Z","iopub.execute_input":"2025-04-16T13:39:35.703494Z","iopub.status.idle":"2025-04-16T13:39:35.709585Z","shell.execute_reply.started":"2025-04-16T13:39:35.703470Z","shell.execute_reply":"2025-04-16T13:39:35.708629Z"}},"outputs":[],"execution_count":45},{"cell_type":"code","source":"SEQ_LEN = 30\nPRED_WINDOW = 14","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:39:43.214126Z","iopub.execute_input":"2025-04-16T13:39:43.214396Z","iopub.status.idle":"2025-04-16T13:39:43.218074Z","shell.execute_reply.started":"2025-04-16T13:39:43.214375Z","shell.execute_reply":"2025-04-16T13:39:43.217315Z"}},"outputs":[],"execution_count":46},{"cell_type":"code","source":"train_data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:44:19.553993Z","iopub.execute_input":"2025-04-16T13:44:19.554309Z","iopub.status.idle":"2025-04-16T13:44:19.609065Z","shell.execute_reply.started":"2025-04-16T13:44:19.554285Z","shell.execute_reply":"2025-04-16T13:44:19.608454Z"}},"outputs":[{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"      order_date  customer_id  discount  net_order_amount warehouse_name  \\\n0     2025-04-03         5235   1650.00           17475.0          Noida   \n1     2025-01-30         7622    735.48            8935.0  Greater NOIDA   \n2     2024-12-26         2223    420.00            4100.0          Noida   \n3     2024-12-30         6903      0.00            1700.0    Gomti Nagar   \n4     2025-01-04         2296    214.00            4860.0       Telibagh   \n...          ...          ...       ...               ...            ...   \n54930 2024-12-26         1625   1250.00           12650.0          Noida   \n54931 2024-12-26          948    130.00            1520.0    Gomti Nagar   \n54932 2024-12-26         5822    935.00            7320.0       Telibagh   \n54933 2024-12-26         4268    198.00            3310.0       Telibagh   \n54934 2024-12-26          998    700.00            9990.0    Gomti Nagar   \n\n       day_of_week  day_of_week_0  day_of_week_1  day_of_week_2  \\\n0                3            0.0            0.0            0.0   \n1                3            0.0            0.0            0.0   \n2                3            0.0            0.0            0.0   \n3                0            1.0            0.0            0.0   \n4                5            0.0            0.0            0.0   \n...            ...            ...            ...            ...   \n54930            3            0.0            0.0            0.0   \n54931            3            0.0            0.0            0.0   \n54932            3            0.0            0.0            0.0   \n54933            3            0.0            0.0            0.0   \n54934            3            0.0            0.0            0.0   \n\n       day_of_week_3  ...  day_of_week_3  day_of_week_4  day_of_week_5  \\\n0                1.0  ...            1.0            0.0            0.0   \n1                1.0  ...            1.0            0.0            0.0   \n2                1.0  ...            1.0            0.0            0.0   \n3                0.0  ...            0.0            0.0            0.0   \n4                0.0  ...            0.0            0.0            1.0   \n...              ...  ...            ...            ...            ...   \n54930            1.0  ...            1.0            0.0            0.0   \n54931            1.0  ...            1.0            0.0            0.0   \n54932            1.0  ...            1.0            0.0            0.0   \n54933            1.0  ...            1.0            0.0            0.0   \n54934            1.0  ...            1.0            0.0            0.0   \n\n       day_of_week_6  warehouse_name_Ayodhya  warehouse_name_Gomti Nagar  \\\n0                0.0                     0.0                         0.0   \n1                0.0                     0.0                         0.0   \n2                0.0                     0.0                         0.0   \n3                0.0                     0.0                         1.0   \n4                0.0                     0.0                         0.0   \n...              ...                     ...                         ...   \n54930            0.0                     0.0                         0.0   \n54931            0.0                     0.0                         1.0   \n54932            0.0                     0.0                         0.0   \n54933            0.0                     0.0                         0.0   \n54934            0.0                     0.0                         1.0   \n\n       warehouse_name_Greater NOIDA  warehouse_name_Noida  \\\n0                               0.0                   1.0   \n1                               1.0                   0.0   \n2                               0.0                   1.0   \n3                               0.0                   0.0   \n4                               0.0                   0.0   \n...                             ...                   ...   \n54930                           0.0                   1.0   \n54931                           0.0                   0.0   \n54932                           0.0                   0.0   \n54933                           0.0                   0.0   \n54934                           0.0                   0.0   \n\n       warehouse_name_Telibagh  warehouse_name_Unnao  \n0                          0.0                   0.0  \n1                          0.0                   0.0  \n2                          0.0                   0.0  \n3                          0.0                   0.0  \n4                          1.0                   0.0  \n...                        ...                   ...  \n54930                      0.0                   0.0  \n54931                      0.0                   0.0  \n54932                      1.0                   0.0  \n54933                      1.0                   0.0  \n54934                      0.0                   0.0  \n\n[54935 rows x 32 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_date</th>\n      <th>customer_id</th>\n      <th>discount</th>\n      <th>net_order_amount</th>\n      <th>warehouse_name</th>\n      <th>day_of_week</th>\n      <th>day_of_week_0</th>\n      <th>day_of_week_1</th>\n      <th>day_of_week_2</th>\n      <th>day_of_week_3</th>\n      <th>...</th>\n      <th>day_of_week_3</th>\n      <th>day_of_week_4</th>\n      <th>day_of_week_5</th>\n      <th>day_of_week_6</th>\n      <th>warehouse_name_Ayodhya</th>\n      <th>warehouse_name_Gomti Nagar</th>\n      <th>warehouse_name_Greater NOIDA</th>\n      <th>warehouse_name_Noida</th>\n      <th>warehouse_name_Telibagh</th>\n      <th>warehouse_name_Unnao</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2025-04-03</td>\n      <td>5235</td>\n      <td>1650.00</td>\n      <td>17475.0</td>\n      <td>Noida</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2025-01-30</td>\n      <td>7622</td>\n      <td>735.48</td>\n      <td>8935.0</td>\n      <td>Greater NOIDA</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2024-12-26</td>\n      <td>2223</td>\n      <td>420.00</td>\n      <td>4100.0</td>\n      <td>Noida</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2024-12-30</td>\n      <td>6903</td>\n      <td>0.00</td>\n      <td>1700.0</td>\n      <td>Gomti Nagar</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2025-01-04</td>\n      <td>2296</td>\n      <td>214.00</td>\n      <td>4860.0</td>\n      <td>Telibagh</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>54930</th>\n      <td>2024-12-26</td>\n      <td>1625</td>\n      <td>1250.00</td>\n      <td>12650.0</td>\n      <td>Noida</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>54931</th>\n      <td>2024-12-26</td>\n      <td>948</td>\n      <td>130.00</td>\n      <td>1520.0</td>\n      <td>Gomti Nagar</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>54932</th>\n      <td>2024-12-26</td>\n      <td>5822</td>\n      <td>935.00</td>\n      <td>7320.0</td>\n      <td>Telibagh</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>54933</th>\n      <td>2024-12-26</td>\n      <td>4268</td>\n      <td>198.00</td>\n      <td>3310.0</td>\n      <td>Telibagh</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>54934</th>\n      <td>2024-12-26</td>\n      <td>998</td>\n      <td>700.00</td>\n      <td>9990.0</td>\n      <td>Gomti Nagar</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>54935 rows × 32 columns</p>\n</div>"},"metadata":{}}],"execution_count":52},{"cell_type":"code","source":"train_data = preprocess_data(train_data)\ntrain_data, onehot_cols = encode_features(train_data)\ndaily_df = build_customer_timeseries(train_data, list(onehot_cols))\nX, y = create_lstm_sequences(daily_df, list(onehot_cols))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-16T13:41:32.136906Z","iopub.execute_input":"2025-04-16T13:41:32.137625Z","iopub.status.idle":"2025-04-16T13:41:32.344279Z","shell.execute_reply.started":"2025-04-16T13:41:32.137601Z","shell.execute_reply":"2025-04-16T13:41:32.343144Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n  0%|          | 0/1932 [00:00<?, ?it/s]\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_31/2514826324.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mtrain_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpreprocess_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mtrain_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0monehot_cols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mencode_features\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mdaily_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_customer_timeseries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0monehot_cols\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcreate_lstm_sequences\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdaily_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0monehot_cols\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tmp/ipykernel_31/1360157211.py\u001b[0m in \u001b[0;36mbuild_customer_timeseries\u001b[0;34m(df, feature_columns)\u001b[0m\n\u001b[1;32m      7\u001b[0m         \u001b[0mcust_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcust_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'discount'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'net_order_amount'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mfeature_columns\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m         \u001b[0mcust_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcust_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfull_dates\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfillna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m         \u001b[0mcust_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'order_placed'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mcust_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'net_order_amount'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m         \u001b[0mcust_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'customer_id'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcust_id\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, labels, index, columns, axis, method, copy, level, fill_value, limit, tolerance)\u001b[0m\n\u001b[1;32m   5376\u001b[0m         \u001b[0mtolerance\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5377\u001b[0m     ) -> DataFrame:\n\u001b[0;32m-> 5378\u001b[0;31m         return super().reindex(\n\u001b[0m\u001b[1;32m   5379\u001b[0m             \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5380\u001b[0m             \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, labels, index, columns, axis, method, copy, level, fill_value, limit, tolerance)\u001b[0m\n\u001b[1;32m   5608\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5609\u001b[0m         \u001b[0;31m# perform the reindex on the axes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5610\u001b[0;31m         return self._reindex_axes(\n\u001b[0m\u001b[1;32m   5611\u001b[0m             \u001b[0maxes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlimit\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfill_value\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5612\u001b[0m         ).__finalize__(self, method=\"reindex\")\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_reindex_axes\u001b[0;34m(self, axes, level, limit, tolerance, method, fill_value, copy)\u001b[0m\n\u001b[1;32m   5631\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5632\u001b[0m             \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5633\u001b[0;31m             new_index, indexer = ax.reindex(\n\u001b[0m\u001b[1;32m   5634\u001b[0m                 \u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlimit\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlimit\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtolerance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5635\u001b[0m             )\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, target, method, level, limit, tolerance)\u001b[0m\n\u001b[1;32m   4427\u001b[0m                 \u001b[0;32melif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_unique\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4428\u001b[0m                     \u001b[0;31m# GH#42568\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4429\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"cannot reindex on an axis with duplicate labels\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4430\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4431\u001b[0m                     \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_indexer_non_unique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtarget\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: cannot reindex on an axis with duplicate labels"],"ename":"ValueError","evalue":"cannot reindex on an axis with duplicate labels","output_type":"error"}],"execution_count":51},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}